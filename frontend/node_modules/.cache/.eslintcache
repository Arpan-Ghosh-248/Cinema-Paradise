[{"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/index.js":"1","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reportWebVitals.js":"2","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/App.js":"3","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/store/store.js":"4","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/reducers.js":"5","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/reducers.js":"6","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/Router.jsx":"7","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/posts/reducers.js":"8","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/actions.js":"9","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/store/initialState.js":"10","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/action.js":"11","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/posts/actions.js":"12","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Home.jsx":"13","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/selectors.js":"14","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/API.js":"15","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/selectors.js":"16","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/operations.js":"17","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Favourite.jsx":"18","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Categories.jsx":"19","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Footer.jsx":"20","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/MainImage.jsx":"21","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Preview.jsx":"22","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Header.jsx":"23"},{"size":836,"mtime":1666854875397,"results":"24","hashOfConfig":"25"},{"size":404,"mtime":1666844888660,"results":"26","hashOfConfig":"25"},{"size":270,"mtime":1666844888562,"results":"27","hashOfConfig":"25"},{"size":854,"mtime":1666844888660,"results":"28","hashOfConfig":"25"},{"size":660,"mtime":1666844888659,"results":"29","hashOfConfig":"25"},{"size":392,"mtime":1666844888660,"results":"30","hashOfConfig":"25"},{"size":682,"mtime":1666844888562,"results":"31","hashOfConfig":"25"},{"size":839,"mtime":1666844888660,"results":"32","hashOfConfig":"25"},{"size":170,"mtime":1666844888659,"results":"33","hashOfConfig":"25"},{"size":302,"mtime":1666844888660,"results":"34","hashOfConfig":"25"},{"size":566,"mtime":1666844888659,"results":"35","hashOfConfig":"25"},{"size":471,"mtime":1666844888660,"results":"36","hashOfConfig":"25"},{"size":6810,"mtime":1666851254010,"results":"37","hashOfConfig":"25"},{"size":159,"mtime":1666844888660,"results":"38","hashOfConfig":"25"},{"size":2631,"mtime":1666857338382,"results":"39","hashOfConfig":"25"},{"size":187,"mtime":1666844888659,"results":"40","hashOfConfig":"25"},{"size":1271,"mtime":1666844888659,"results":"41","hashOfConfig":"25"},{"size":3074,"mtime":1666855647953,"results":"42","hashOfConfig":"25"},{"size":12042,"mtime":1666855704339,"results":"43","hashOfConfig":"25"},{"size":603,"mtime":1666850225238,"results":"44","hashOfConfig":"25"},{"size":1344,"mtime":1666850383304,"results":"45","hashOfConfig":"25"},{"size":2298,"mtime":1666855846649,"results":"46","hashOfConfig":"25"},{"size":886,"mtime":1666850252500,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"19ru73j",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":4,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/index.js",[],["101","102"],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reportWebVitals.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/App.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/store/store.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/reducers.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/reducers.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/Router.jsx",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/posts/reducers.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/actions.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/store/initialState.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/action.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/posts/actions.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Home.jsx",["103","104","105","106","107","108","109"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IconLeft from '../assets/img/icon-left.svg';\nimport IconRight from '../assets/img/icon-right.svg';\nimport { getMovies } from '../reducks/movies/selectors';\nimport API from '../API';\nimport MainImage from '../components/Common/MainImage';\nimport { getFavourites } from '../reducks/favourites/selectors';\nimport { addFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\nimport Preview from '../components/Common/Preview';\nimport { useDispatch } from 'react-redux';\nimport IconFav from '../assets/img/icon-fav.png';\n\nconst api = new API();\nconst Home = () => {\n    const [moviesComingSoon, setMoviesCommingSoon] = useState(null);\n    const [moviesNewReleased, setMoviesNewReleased] = useState(null);\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\n    const [showPreview, setShowPreview] = useState(false);\n    const selector = useSelector(state => state);\n    const dispatch = useDispatch();\n    const movies = getMovies(selector);\n    const favourites = getFavourites(selector);\n    const clickfav = movie => {\n        dispatch(addFavourite(movie));\n    };\n    const clickMovie = movieId => {\n        setSelectedMovieId(movieId);\n        setShowPreview(true);\n    };\n    \n    useEffect(() => {\n        dispatch(fetchFromLocalStorage);\n        api.getMovies({ release_type: 'Coming Soon' })\n            .then(movies => {\n                setMoviesCommingSoon(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n        api.getMovies({ release_type: 'Newly Released' })\n            .then(movies => {\n                setMoviesNewReleased(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n    }, [movies]);\n\n    return (\n        <>\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\n            <section>\n                <MainImage />\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Newly Released</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <ul>\n                        {moviesNewReleased && moviesNewReleased.results.length > 0 ? (\n                            moviesNewReleased.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n\n                                </li>\n                            ))\n                        ) : (\n                            <p>No movies here yet...</p>\n                        )}\n                    </ul>\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Upcoming Movies</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <ul>\n                        {moviesComingSoon && moviesComingSoon.results.length > 0 ? (\n                            moviesComingSoon.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            favourites &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n\n                                </li>\n                            ))\n                        ) : (\n                            <p>No movies here yet...</p>\n                        )}\n                    </ul>\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Home;\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/movies/selectors.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/API.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/selectors.js",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/reducks/favourites/operations.js",["110","111"],"import API from '../../API';\nimport { addFavouritesAction, deleteFavouritesAction, fetchFavouritesAction } from './action';\n\nconst api = new API();\nconst FAVOURITES_KEY = 'FAVOURITES_KEY';\n\nexport const fetchFromLocalStorage = () => {\n    return async dispatch => {\n        let favouritesJSON = localStorage.getItem(FAVOURITES_KEY);\n        let favourites = [];\n        if (favouritesJSON) {\n            favourites = JSON.parse(favouritesJSON);\n        }\n        dispatch(fetchFavouritesAction(favourites));\n    };\n};\n\nexport const addFavourite = image => {\n    return async (dispatch, getState) => {\n        let prevFavourites = getState().favourites.list;\n        const nextFavourites = [image, ...prevFavourites];\n        setToLocalStorage(nextFavourites);\n        dispatch(addFavouritesAction(nextFavourites));\n    };\n};\n\nexport const deleteFavourite = id => {\n    return async (dispatch, getState) => {\n        let prevFavourites = getState().favourites.list;\n        const nextFavourites = prevFavourites.filter(image => image.id != id);\n        setToLocalStorage(nextFavourites);\n        dispatch(deleteFavouritesAction(nextFavourites));\n    };\n};\n\nconst setToLocalStorage = favourites => {\n    localStorage.setItem(FAVOURITES_KEY, JSON.stringify(favourites));\n};\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Favourite.jsx",["112"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { deleteFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\nimport { getFavourites } from '../reducks/favourites/selectors';\nimport IconFav from '../assets/img/icon-fav.png';\nimport Preview from '../components/Common/Preview';\nimport Header from '../components/Common/Header';\n\nfunction Favourite() {\n    const dispatch = useDispatch();\n    const selector = useSelector(state => state);\n    const [showPreview, setShowPreview] = useState(false);\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\n    const favourites = getFavourites(selector);\n    const clickMovie = movieId => {\n        setSelectedMovieId(movieId);\n        setShowPreview(true);\n    };\n    useEffect(() => {\n        dispatch(fetchFromLocalStorage());\n    });\n    return (\n        <>\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\n            <section>\n                <Header />\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Newly Released</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <ul>\n                        {favourites && favourites.length > 0 ? (\n                            favourites.map(favourite => (\n                                <li>\n                                    <div class=\"card\">\n                                        <img\n                                            class=\"fav\"\n                                            onClick={() => {\n                                                dispatch(deleteFavourite(favourite.id));\n                                            }}\n                                            src={IconFav}\n                                            alt=\"\"\n                                        />\n                                        <img\n                                            onClick={() => clickMovie(favourite.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + favourite.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{favourite.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={favourite.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n                                </li>\n                            ))\n                        ) : (\n                            <p>No movies here yet...</p>\n                        )}\n                    </ul>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default Favourite;\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/containers/Categories.jsx",["113","114","115","116","117","118","119","120","121","122"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from '../components/Common/Header';\nimport { getMovies } from '../reducks/movies/selectors';\nimport API from '../API';\nimport { getFavourites } from '../reducks/favourites/selectors';\nimport { addFavourite, fetchFromLocalStorage } from '../reducks/favourites/operations';\nimport { useDispatch } from 'react-redux';\nimport IconFav from '../assets/img/icon-fav.png';\nimport Preview from '../components/Common/Preview';\nconst api = new API();\n\nconst Categories = () => {\n    const [categoryAnimated, setCategoryAnimated] = useState(null);\n    const [categoryComedy, setCategoryComedy] = useState(null);\n    const [categoryDrama, setCategoryDrama] = useState(null);\n    const [categoryHorror, setCategoryHorror] = useState(null);\n    const [showPreview, setShowPreview] = useState(false);\n    const [selectedMovieId, setSelectedMovieId] = useState(null);\n\n    const selector = useSelector(state => state);\n    const dispatch = useDispatch();\n    const movies = getMovies(selector);\n    const favourites = getFavourites(selector);\n    const clickfav = movie => {\n        dispatch(addFavourite(movie));\n    };\n    const clickMovie = movieId => {\n        setSelectedMovieId(movieId);\n        setShowPreview(true);\n    };\n\n    useEffect(() => {\n        dispatch(fetchFromLocalStorage);\n        api.getMovies({ category_id: '1' })\n            .then(movies => {\n                setCategoryAnimated(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n        api.getMovies({ category_id: '2' })\n            .then(movies => {\n                setCategoryComedy(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n        api.getMovies({ category_id: '3' })\n            .then(movies => {\n                setCategoryDrama(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n        api.getMovies({ category_id: '4' })\n            .then(movies => {\n                setCategoryHorror(movies);\n            })\n            .catch(error => {\n                alert('Failed to connect API: /movies/');\n            });\n    }, []);\n    return (\n        <>\n            {showPreview && <Preview setShowPreview={setShowPreview} selectedMovieId={selectedMovieId} />}\n            <section>\n                <Header />\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Animated</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    {categoryAnimated && categoryAnimated.results.length > 0 ? (\n                        <ul>\n                            {categoryAnimated.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div class=\"no-post\">\n                            <p>No movies here yet...</p>\n                        </div>\n                    )}\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Romance</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    {categoryComedy && categoryComedy.results.length > 0 ? (\n                        <ul>\n                            {categoryComedy.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div class=\"no-post\">\n                            <p>No movies here yet...</p>\n                        </div>\n                    )}\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Drama</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    {categoryDrama && categoryDrama.results.length > 0 ? (\n                        <ul>\n                            {categoryDrama.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div class=\"no-post\">\n                            <p>No movies here yet...</p>\n                        </div>\n                    )}\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"left\">\n                        <div class=\"newly-rel\">\n                            <hr />\n                            <h2>Horror</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    {categoryHorror && categoryHorror.results.length > 0 ? (\n                        <ul>\n                            {categoryHorror.results.map(movie => (\n                                <li>\n                                    <div class=\"card\">\n                                        {movie &&\n                                            Object.values(favourites).filter(\n                                                favoriteMovie => movie.id == favoriteMovie.id\n                                            ).length === 0 && (\n                                                <img\n                                                    class=\"fav\"\n                                                    onClick={() => {\n                                                        clickfav(movie);\n                                                    }}\n                                                    src={IconFav}\n                                                    alt=\"\"\n                                                />\n                                            )}\n                                        <img\n                                            onClick={() => clickMovie(movie.id)}\n                                            class=\"image\"\n                                            src={'https://res.cloudinary.com/dwzjr9dg5/' + movie.image_mobile}\n                                            alt=\"\"\n                                        />\n                                    </div>\n                                    <h1>{movie.name}</h1>\n                                    <p>TV-MA | Action, Crime</p>\n                                    <a href={movie.trailer_link} target=\"_blank\"><button>Watch Trailer</button></a>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <div class=\"no-post\">\n                            <p>No movies here yet...</p>\n                        </div>\n                    )}\n                </div>\n            </section>\n        </>\n    );\n};\n\nexport default Categories;\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Footer.jsx",[],"/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/MainImage.jsx",["123"],"import React from 'react';\nimport Header from '../Common/Header';\nimport ImgBackground from '../../assets/img/Group 2218.png';\n\nfunction MainImage() {\n    return (\n        <>\n            <div class=\"main-image\">\n                <Header />\n                <img style={{ width: '100%' }} src={ImgBackground} alt=\"\" />\n                <div class=\"text\">\n                    <h1>ICE AGE</h1>\n                    <p>\n                        With global warming threatening their <br />\n                        once-icy domain with widespread flooding,\n                        <br />\n                        Manny (Ray Romano), Sid (John Alberto\n                        <br />\n                        Leguizamo) and Diego (Denis Leary)\n                        <br />\n                        set out to find a safe haven. Along the way,\n                        <br />\n                        another mammoth Queen Latifah),\n                        <br />\n                        who thinks she is an opossum,\n                        <br />\n                        joins the travellers on their perilous quest.\n                    </p>\n                   <a href=\"https://www.youtube.com/watch?v=lr_spVswTUo&vl=en\" target=\"_blank\"><button>Watch Now</button></a>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MainImage;\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Preview.jsx",["124","125","126","127"],"import React, { useState, useEffect } from 'react';\nimport API from '../../API';\nimport { useDispatch } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport CloseButtton from '../../assets/img/icon-close.png';\n\nconst api = new API();\n\nconst Preview = ({ setShowPreview, selectedMovieId }) => {\n    const [movie, setMovie] = useState(null);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        api.getMovie(selectedMovieId)\n            .then(movie => {\n                setMovie(movie);\n            })\n            .catch(error => {\n                alert('Faild to connect API: /movie/:id/');\n            });\n    }, []);\n\n    console.log('movie', movie);\n\n    return (\n        <>\n            <section class=\"preview\">\n                {movie && (\n                    <div class=\"opecity\">\n                        <img class=\"icon-close\" src={CloseButtton} onClick={() => setShowPreview(false)} alt=\"\" />\n                        <img class=\"background2\" src={movie.image} alt=\"\" />\n                        <div class=\"preview-content\">\n                            <div class=\"preview-img\">\n                                <img class=\"preview\" src={movie.image} alt=\"\" />\n                            </div>\n                            <div class=\"preview-text\">\n                                <h1>{movie.name}</h1>\n                                <p>Movie</p>\n                                <h4>{movie.rating}</h4>\n                                <p>{movie.movie_duration} Minutes - USA</p>\n                                <div class=\"preview-buttons\">\n                                    <button>Action</button>\n                                    <button>Crime</button>\n                                    <button>Drama</button>\n                                    <button>Fantasy</button>\n                                    <button>Thriller</button>\n                                </div>\n                                <p>{movie.description}</p>\n                                <a href={movie.trailer_link} target=\"_blank\"><button class=\"preview-play\">Watch Trailer</button></a>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </section>\n        </>\n    );\n};\n\nexport default Preview;\n","/Users/syedahmed/Desktop/cinema_paradiso/frontend/src/components/Common/Header.jsx",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":3,"column":8,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"132","severity":1,"message":"136","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":48,"column":8,"nodeType":"139","endLine":48,"endColumn":16,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":70,"column":75,"nodeType":"143","messageId":"144","endLine":70,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":90,"column":37,"nodeType":"147","messageId":"148","endLine":90,"endColumn":82,"fix":"149"},{"ruleId":"141","severity":1,"message":"142","line":116,"column":75,"nodeType":"143","messageId":"144","endLine":116,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":136,"column":37,"nodeType":"147","messageId":"148","endLine":136,"endColumn":82,"fix":"150"},{"ruleId":"132","severity":1,"message":"151","line":4,"column":7,"nodeType":"134","messageId":"135","endLine":4,"endColumn":10},{"ruleId":"141","severity":1,"message":"152","line":30,"column":72,"nodeType":"143","messageId":"144","endLine":30,"endColumn":74},{"ruleId":"145","severity":1,"message":"146","line":58,"column":37,"nodeType":"147","messageId":"148","endLine":58,"endColumn":86,"fix":"153"},{"ruleId":"132","severity":1,"message":"154","line":23,"column":11,"nodeType":"134","messageId":"135","endLine":23,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":63,"column":8,"nodeType":"139","endLine":63,"endColumn":10,"suggestions":"155"},{"ruleId":"141","severity":1,"message":"142","line":85,"column":75,"nodeType":"143","messageId":"144","endLine":85,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":105,"column":37,"nodeType":"147","messageId":"148","endLine":105,"endColumn":82,"fix":"156"},{"ruleId":"141","severity":1,"message":"142","line":131,"column":75,"nodeType":"143","messageId":"144","endLine":131,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":151,"column":37,"nodeType":"147","messageId":"148","endLine":151,"endColumn":82,"fix":"157"},{"ruleId":"141","severity":1,"message":"142","line":177,"column":75,"nodeType":"143","messageId":"144","endLine":177,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":197,"column":37,"nodeType":"147","messageId":"148","endLine":197,"endColumn":82,"fix":"158"},{"ruleId":"141","severity":1,"message":"142","line":223,"column":75,"nodeType":"143","messageId":"144","endLine":223,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":243,"column":37,"nodeType":"147","messageId":"148","endLine":243,"endColumn":82,"fix":"159"},{"ruleId":"145","severity":1,"message":"146","line":29,"column":20,"nodeType":"147","messageId":"148","endLine":29,"endColumn":96,"fix":"160"},{"ruleId":"132","severity":1,"message":"161","line":4,"column":10,"nodeType":"134","messageId":"135","endLine":4,"endColumn":14},{"ruleId":"132","severity":1,"message":"162","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":19},{"ruleId":"137","severity":1,"message":"163","line":21,"column":8,"nodeType":"139","endLine":21,"endColumn":10,"suggestions":"164"},{"ruleId":"145","severity":1,"message":"146","line":49,"column":33,"nodeType":"147","messageId":"148","endLine":49,"endColumn":78,"fix":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'IconLeft' is defined but never used.","Identifier","unusedVar","'IconRight' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["168"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"169","text":"170"},{"range":"171","text":"170"},"'api' is assigned a value but never used.","Expected '!==' and instead saw '!='.",{"range":"172","text":"170"},"'movies' is assigned a value but never used.",["173"],{"range":"174","text":"170"},{"range":"175","text":"170"},{"range":"176","text":"170"},{"range":"177","text":"170"},{"range":"178","text":"170"},"'push' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedMovieId'. Either include it or remove the dependency array.",["179"],{"range":"180","text":"170"},"no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},[4115,4115]," rel=\"noreferrer\"",[6474,6474],[2735,2735],{"desc":"183","fix":"184"},[4550,4550],[6911,6911],[9267,9267],[11627,11627],[1222,1222],{"desc":"185","fix":"186"},[2059,2059],"Update the dependencies array to be: [dispatch, movies]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch]",{"range":"189","text":"190"},"Update the dependencies array to be: [selectedMovieId]",{"range":"191","text":"192"},[1887,1895],"[dispatch, movies]",[2339,2341],"[dispatch]",[648,650],"[selectedMovieId]"]